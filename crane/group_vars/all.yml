---
## Crane
## ********************************************************************************************************************************
# 部署 Kubernetes 对应版本, 不建议修改, 如需修改请修改小版本进行部署测试, 大版本会引发部署参数不支持等问题.
# 如使用镜像方式部署, 不能修改
# https://github.com/kubernetes/kubernetes/releases
k8s_version: 'v1.24.14'

# 避免大版本中组件的版本差异, 使用 build 版本作为差异配置项, 在项目中可以看做如下使用 '{{ k8s_version }}.{{ build_k8s_version }}'
build_k8s_version: '0'

# OS Drive/Arch Type
os_drive: 'linux'
os_arch: 'amd64'

# 是否使用离线方式部署(Kubernetes).
# 当选择 true 时, 执行 `make local_save_image` 命令下载官方离线包到 `crane/roles/downloads-packages/files`
# 因 kubernetes 和 cri 是分开的（可独立部署 cri）请配合 `cri_drive_install_type` 参数一同使用
is_using_local_files_deploy: false

# 是否开启 Master 节点调度, 默认为 true. 
is_kube_master_schedule: true

# 是否使用 Keepalived, 在非公有云/私有云环境中, 需要借助 keepalived 进行服务集群的高可用, 它的位置在类 SLB 层
# 其他配置参照 crane/roles/kubernetes-networks/defaults/keepalived.yaml
is_keepalived: false

# HaProxy Version
# 是否部署 haproxy, 当不需要 haproxy 一定要保证上游 slb 健全否则不建议生产环境使用
# 当为 false 时, 则会默认使用 5443 端口为 apiServer 默认端口
is_haproxy: true

# 如使用镜像方式部署, 不能修改 (如果可以使用 {{ k8s_cluster_component_registry }} 中的仓库地址获取镜像则可随意修改)
# https://hub.docker.com/_/haproxy
# 其他配置参照 crane/roles/kubernetes-cluster-management/vars/haproxy.yaml
haproxy_version: '2.6.0'

## External Proxy
## ********************************************************************************************************************************
# 执行过程中使用 Wget or Curl 时可以借助代理执行. (下载包文件与镜像部署方式没有交集，镜像部署已经包含这一步骤)

# 主要作用 Keepalived 和 Calico, 如需部署 cilium 请忽略此值
# 第三方网络设备绑定的网络设备配置，需要集群内绑定的网卡名称统一, 可用逗号分隔, 如果使用正则匹配则请关闭 Keepalived
# 如果配置了 Keepalived 则 Keepalived 只会绑定第一块网卡, 如有特殊需求请单独修改 keepalived.vip_bind_net_device 参数
os_network_device_name: 'ens2'

# HTTP Proxy
http_proxy: ''

# HTTPS Proxy
https_proxy: ''

# No Proxy
no_proxy: 'localhost,127.0.0.1'

# 部署的 Cluster 中 Containers 的时区, 由于是挂载宿主机 /usr/share/zoneinfo 目录解决, 所以要保证此目录的存在。
# 如果需要设置 UTC 时区, 请设置值为: Europe/Moscow, 可设置为 UTC.
# 不能为空
time_location: 'Asia/Shanghai'

## Kubernetes
## ********************************************************************************************************************************

# Kubernetes ApiServer 的总入口地址, 可配置 SLB 等云服务商提供的地址, 但需要接入后端服务器的 80, 443 端口, 此地址可以写某个单实例的 IP 地址
# 支持 Domain, 支持 AWS ELB
k8s_load_balance_ip: 127.0.0.1

# 其他选择参照 roles/kubernetes-manifests/defaults/main.yml

# 部署 Kubernetes 的方式, 有 staticPod 和 systemd 模式。默认使用 staticPod
# 当使用 staticPod 时, kubectl、kubelet 会通过二进制方式部署, 其余通过 kubelet 的 staticPod 模式启动。
# 当使用 systemd 时, 下会使用二进制部署 kube-apiserver、kube-controller-manager、kube-scheduler、kube-proxy、kubectl、kubelet。
k8s_deploy_type: 'staticPod'

# CoreDNS Version
# https://github.com/coredns/coredns/releases
# 如使用镜像方式部署, 不能修改 (如果可以使用 {{ k8s_cluster_component_registry }} 中的仓库地址获取镜像则可随意修改)
dns_version: '1.9.3'

# 部署 CNI 对应版本, 如使用镜像方式部署, 不能修改 (如果可以使用 {{ k8s_cluster_component_registry }} 中的仓库地址获取镜像则可随意修改)
# https://github.com/containernetworking/plugins/releases/
# 此值如使用 Calico 时会使用, 其他请忽略
cni_version: 'v1.1.0'

# Etcd Verions
# https://github.com/etcd-io/etcd/releases
# 如使用镜像方式部署, 不能修改 (如果可以使用 {{ k8s_cluster_component_registry }} 中的仓库地址获取镜像则可随意修改)
# 其他配置参照 crane/roles/etcd-cluster-management/vars/mail.yml
etcd_version: '3.5.3-0'

# 值为 staticPod 则走静态 Pod 方式部署
# 值为 systemd 通过 systemd 方式部署, systemd 模式下不可添加或移除 etcd 集群的配置项
# 值为 external 则通过使用外部的 etcd 进行部署集群, 则需要额外配置单独的 etcd tls 即 endpoint 配置项
# 请参照 crane/roles/etcd-cluster-management/defaults/tls.yaml 中的 tls file 配置及 endpoint 进行修改
etcd_deploy_type: 'staticPod'

# Kube Network
## ********************************************************************************************************************************
# Kubernetes Network 的优化 https://www.kubernetes.org.cn/5036.html

# 支持 calico 与 cilium 网络模式, 默认 calico
# calico or cilium or none
general_network_drive: 'cilium'

# Calico Verion
# https://github.com/projectcalico/calico/releases
# 如使用镜像方式部署, 不能修改 (如果可以使用 {{ k8s_cluster_component_registry }} 中的仓库地址获取镜像则可随意修改)
# 其他配置请参照 roles/kubernetes-networks/defaults/calico.yaml
calico_version: 'v3.20.4'

# Cilium Verion
# https://github.com/cilium/cilium/releases
# 其他配置请参照 roles/kubernetes-networks/defaults/cilium.yaml
cilium_version: 'v1.11.5'

## Kubelet Config
# 参照 crane/roles/kubernetes-cluster-management/vars/kubelet.yaml

# Kube Proxy
# 如果配置了 Keepalived 就需要配置绑定的 nodePort 的物理网段，否则 Keepalived 的流量无法到达 nodePort, 因为 Keepalived 会发送 ARP 请求到此网段内，如果不设置这个网段则会流量不可达. v1.15.3.5 中修复。
# 如果物理网段为 10.100.21.0/24, 请把值写入下方配置即可, 格式 ['10.100.21.0/24'] 需要传入列表。
# 其他选择参照 roles/kubernetes-network/defaults/main.yml
kube_proxy_node_port_addresses: ''

# 是否安装 Kube-Proxy
is_kube_proxy: true

# 是否安装 CoreDNS
is_kube_dns: true

## CRI
## ********************************************************************************************************************************

# 安装的介质(在线离线)可选 local_binary/http_binary
# 当选择 local_binary 时,执行 `make local_load_cri` 命令下载官方离线包到 `crane/roles/downloads-packages/files`
# 也可以设置为 none, 则不安装任何 cri 让 kubelet 使用默认的 cri.
cri_drive_install_type: 'http_binary'

# cri 支持的驱动有 docker/containerd/crio
## 各驱动独立配置项, 请参阅 crane/roles/cri-install 并根据需求在 vars 中自定义配置各 cri 的驱动版本。
cri_driver: ['containerd', 'docker']

# 此选项配置 Kubernetes 默认 cri 驱动
# 当使用 RuntimeClass 时此选项配合 `cri_driver` 使用
cri_k8s_default: containerd

# 具体配置请移步 crane/roles/cri-install/defaults/main.yml 进行修改

## kubernetes-addons
## ********************************************************************************************************************************
# kubernetes-addons 配置 请参照 roles/kubernetes-addons/defaults/main.yml

## Clean Kubernetes Cluster
## ********************************************************************************************************************************
# 初始化时, 是否进行 Clean, 如果是全新的环境可以不开启, 如果之前部署过或者使用 kubeadm 进行部署则需要开启此配置,
# 应避免部署时影响效率
# 更多清除选项请查阅 crane/roles/remove-cluster/defaults/main.yml
is_initialize_clean: false

## Simple
## ********************************************************************************************************************************

# 是否是 kube-simple 模式
is_kube_simple: false
