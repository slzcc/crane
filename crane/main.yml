---
- hosts: localhost
  gather_facts: false
  vars_files:
    - "roles/local-task/defaults/main.yml"
  roles:
    - { role: local-task }
  tasks:
    - debug: msg="Default Install Document Description [https://github.com/slzcc/crane/blob/master/docs/INSTALL.md]"
    - debug: msg="Nodes Document Description [https://github.com/slzcc/crane/blob/master/docs/NODES.md]"
    - debug: msg="online Install [https://github.com/slzcc/crane/blob/master/docs/ONLINE_INSTALL.md]"
    - debug: msg="offline Install [https://github.com/slzcc/crane/blob/master/docs/OFFINE_INSTALL.md]"
    - name: Check All Host instance
      assert:
        that:
          - "not etcd_cluster_del_node_ip_str"
          - "not etcd_cluster_add_node_ip_str"
          - "not etcd_new_cluster_ip_str"
          - "not etcd_del_cluster_ip_str"
          - "not k8s_cluster_del_node_ip_str"
          - "not k8s_cluster_add_node_ip_str"
          - "not k8s_cluster_del_master_ip_str"
          - "not k8s_cluster_add_master_ip_str"
          - "kube_master_ip_str"
          - "etcd_ip_str"
        fail_msg: "部署 k8s 需要保证 nodes 文件的 kube-master、kube-node、etcd 有正确的值且其他 组 中不应有任何 IP 地址! 请修复后重试."
        success_msg: "Check that the Nodes list is normal."
    - debug: 
        msg: 
        - "In offline deployment mode, check whether the local path crane/roles/downloads-packages/files/ exists files."
        - "1、image file: crane/roles/downloads-packages/files/kubernetes.tar.gz"
        - "2、runtime runC file: crane/roles/downloads-packages/files/runC"
        - "3、cri tools file: crane/roles/downloads-packages/files/crictl*.tar.gz"
        - "4、cri apps file(It can be multiple depending on 'cri_driver'): crane/roles/downloads-packages/files/{docker.*|containerd.*|cir-o.*}.tar.gz"
        - "If you do not have the above file, execute it in the Crane root directory"
        - "$ make local_load_cri && make local_save_image"
      when: is_using_local_files_deploy
    - shell: "sleep 3"

- name: Initialize Crane Env
  hosts: all
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
    crane_deploy_type: 'main'
    crane_tasks: 'main'
  vars_files:
    - "roles/cri-install/vars/containerd.yaml"
    - "roles/cri-install/vars/crio.yaml"
    - "roles/cri-install/vars/docker.yaml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/etcd-cluster-management/vars/main.yml"
    - "roles/etcd-cluster-management/defaults/main.yml"
    - "roles/downloads-ssh-key/defaults/main.yml"
  roles:
    - { role: crane, tags: [crane] }

- name: Initialize SSH Secret Key
  hosts: kube-master[0]
  gather_facts: false
  become: yes
  become_method: sudo
  vars_files:
    - "roles/crane/defaults/main.yml"
  roles:
    - { role: downloads-ssh-key, tags: [copy_ssh_private_key]}

- name: Prepare the environment and install CRI.
  hosts: k8s-cluster:etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/crane/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/cri-install/vars/docker.yaml"
    - "roles/cri-install/vars/containerd.yaml"
    - "roles/cri-install/vars/crio.yaml"
    - "roles/cri-install/vars/cri-tools.yaml"
    - "roles/cri-install/vars/cri-docker.yaml"
    - "roles/cri-install/vars/runc.yaml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-networks/defaults/main.yml"
  roles:
    - { role: system-initialize, tags: [system]}
    - { role: cri-install, tags: [cri]}

- name: Set Binary File Deployment.
  hosts: k8s-cluster:etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-cluster-management/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/tls.yaml"
  roles:
    - { role: downloads-packages, tags: [packages]}

- name: Cluster Master Configuration File Deployment, CFSSL Generated CA And Sync All Master.
  hosts: kube-master[0]
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-cluster-management/defaults/tls.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
  roles:
    - { role: kubernetes-cluster-management, tags: [k8s-kcm]}
  tasks:
    - { include: 'roles/kubernetes-cluster-management/includes/copy-kubelet-ca-to-nodes.yaml' }

- name: Initialize Etcd Cluster CA Config
  hosts: etcd[0]
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-cluster-management/defaults/tls.yaml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/etcd-cluster-management/defaults/main.yml"
    - "roles/etcd-cluster-management/vars/main.yml"
  tasks:
    - { include: 'roles/etcd-cluster-management/includes/create-etcd-ca.yaml' }

- name: Deploy Etcd Manifests
  hosts: etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-cluster-management/defaults/tls.yaml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/etcd-cluster-management/defaults/main.yml"
    - "roles/etcd-cluster-management/vars/main.yml"
  tasks:
    - { include: 'roles/etcd-cluster-management/includes/deploy-etcd-manifests.yaml', when: etcd_deploy_type == 'staticPod' }
    - { include: 'roles/etcd-cluster-management/includes/deploy-etcd-systemd-manifests.yaml', when: etcd_deploy_type == 'systemd' }

- name: Create Kubernetes Cluster Master/Nodes Config
  hosts: k8s-cluster
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-cluster-management/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/tls.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/etcd-cluster-management/defaults/main.yml"
    - "roles/etcd-cluster-management/vars/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-cluster-management/vars/kubelet.yaml"
    - "roles/cri-install/vars/kubelet.yaml"
    - "roles/cri-install/vars/crio.yaml"
    - "roles/cri-install/vars/containerd.yaml"
    - "roles/cri-install/vars/cri-docker.yaml"
  tasks:
    - { include: 'roles/kubernetes-cluster-management/includes/initialize-kubelet.yaml' }
    - { include: 'roles/kubernetes-cluster-management/includes/configuretion-kubelet.yaml' }
    - { include: 'roles/kubernetes-cluster-management/includes/create-kubelet-pki.yaml' }
    - { include: 'roles/kubernetes-cluster-management/includes/create-kubelet-conf.yaml' }
    - { include: 'roles/kubernetes-networks/includes/initialize-kube-proxy.yaml', when: kube_proxy_deploy_type == 'systemd' }

- name: Create Kube Proxy Files
  hosts: kube-master[0]
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-cluster-management/vars/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-cluster-management/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/tls.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-cluster-management/vars/haproxy.yaml"
    - "roles/kubernetes-networks/defaults/keepalived.yaml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/etcd-cluster-management/defaults/tls.yaml"
  tasks:
    - { include: 'roles/kubernetes-networks/includes/create-kube-proxy-pki.yaml', when: kube_proxy_deploy_type == 'systemd' }
    - { include: 'roles/kubernetes-networks/includes/create-kube-proxy-conf.yaml', when: kube_proxy_deploy_type == 'systemd' }
    - { include: 'roles/kubernetes-networks/includes/copy-kube-proxy-ca-to-nodes.yaml', when: kube_proxy_deploy_type == 'systemd' }

- name: Create Cluster Master Kubernetes Manifests Files
  hosts: kube-master
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-cluster-management/vars/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-cluster-management/vars/haproxy.yaml"
    - "roles/kubernetes-networks/defaults/keepalived.yaml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/etcd-cluster-management/defaults/tls.yaml"
  roles:
    - { role: kubernetes-manifests, tags: [k8s-manifests]}

- name: Start Kubernetes Cluster Maste/Nones Kubelet.
  hosts: k8s-cluster
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-cluster-management/vars/kubelet.yaml"
  tasks:
    - { include: 'roles/kubernetes-cluster-management/includes/start-kubelet.yaml' }
    - { include: 'roles/kubernetes-networks/includes/start-kube-proxy.yaml', when: kube_proxy_deploy_type == 'systemd' }

- name:  Initialize Kubernetes Cluster RBAC.
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-cluster-management/defaults/main.yml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
  tasks:
    - { include: 'roles/kubernetes-cluster-management/includes/initialize-cluster-rbac.yaml' }

- name: Create Kubernetes Cluster Network.
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/etcd-cluster-management/vars/main.yml"
    - "roles/kubernetes-networks/defaults/calico.yaml"
    - "roles/kubernetes-networks/defaults/cilium.yaml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
  roles:
    - { role: kubernetes-networks, tags: [k8s-networks]}

- name: Kubernetes Cluster Setup
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
    - "roles/kubernetes-cluster-management/defaults/main.yml"
  tasks:
    - { include: 'roles/kubernetes-cluster-management/includes/kubernetes-cluster-setup.yaml' }

- name: Sync Crane Delploy Files to Instance
  hosts: kube-master[0]
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
    crane_deploy_type: 'main'
  vars_files:
    - "roles/crane/defaults/main.yml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-cluster-management/defaults/configure.yaml"
  tasks:
    - { include: 'roles/crane/includes/sync-crane.yaml' }