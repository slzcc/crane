{% macro initial_cluster() -%}
{%- for host in groups['etcd-cluster'] -%}
  {{ etcd_peer_url_scheme }}://
  {%- if etcd_interface != "" -%}
    {{ hostvars[host]['ansible_' + etcd_interface].ipv4.address }}
  {%- else -%}
    {{ hostvars[host].ansible_default_ipv4.address }}
  {%- endif -%}
:{{ etcd_client_port }}
  {%- if not loop.last -%},{%- endif -%}
{%- endfor -%}
{% endmacro -%}
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  containers:
  - command:
    - kube-apiserver
    - --bind-address=0.0.0.0
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --client-ca-file={{ kubernetes_pki_dirs }}ca.pem
    - --enable-admission-plugins=NodeRestriction
    - --enable-bootstrap-token-auth=true
{% if etcd_deploy_type == 'external' %}
    - --etcd-cafile={{ tls_etcd_ca_dir }}{{ tls_etcd_ca_file_name }}
    - --etcd-certfile={{ tls_etcd_ca_dir }}{{ tls_etcd_cert_file_name }}
    - --etcd-keyfile={{ tls_etcd_ca_dir }}{{ tls_etcd_key_file_name }}
    - --etcd-servers={{ tls_etcd_endpoints }}
{% else %}
    - --etcd-cafile={{ etcd_ssl_dirs }}{{ tls_etcd_ca_file_name }}
    - --etcd-certfile={{ etcd_ssl_dirs }}{{ tls_etcd_cert_file_name }}
    - --etcd-keyfile={{ etcd_ssl_dirs }}{{ tls_etcd_key_file_name }}
    - --etcd-servers={{ initial_cluster() }}
{% endif %}
    - --kubelet-client-certificate={{ kubernetes_pki_dirs }}apiserver.pem
    - --kubelet-client-key={{ kubernetes_pki_dirs }}apiserver-key.pem
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file={{ kubernetes_pki_dirs }}front-proxy-client.pem
    - --proxy-client-key-file={{ kubernetes_pki_dirs }}front-proxy-client-key.pem
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file={{ kubernetes_pki_dirs }}front-proxy-ca.pem
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --secure-port={{ k8s_master_apiservice_bind_port }}
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file={{ kubernetes_pki_dirs }}sa.pub
    - --service-account-issuer=https://kubernetes.default.svc.{{ dns_domain }}
    - --service-account-signing-key-file={{ kubernetes_pki_dirs }}sa.key
    - --service-cluster-ip-range={{ k8s_cluster_ip_range }}
    - --tls-cert-file={{ kubernetes_pki_dirs }}apiserver.pem
    - --tls-private-key-file={{ kubernetes_pki_dirs }}apiserver-key.pem
    - --service-node-port-range={{ k8s_apiserver_node_port_range }}
    - --client-ca-file={{ kubernetes_pki_dirs }}ca.pem
    image: {{ k8s_cluster_component_registry }}/kube-apiserver:{{ k8s_version }}
    imagePullPolicy: IfNotPresent
    env:
    - name: TZ
      value: "{{ time_location }}"
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: {{ k8s_master_apiservice_bind_port }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: {{ k8s_master_apiservice_bind_port }}
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: {{ k8s_master_apiservice_bind_port }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    volumeMounts:
{% if etcd_deploy_type == 'external' %}
    - mountPath: {{ tls_etcd_ca_dir }}
      name: etcd-certs
      readOnly: true
{% endif %}
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: {{ kubernetes_etc_dirs }}pki
      name: k8s-certs
      readOnly: true
    - mountPath: /usr/local/share/ca-certificates
      name: usr-local-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/zoneinfo
      name: usr-local-timezone
      readOnly: true
  volumes:
{% if etcd_deploy_type == 'external' %}
  - hostPath:
      path: {{ tls_etcd_ca_dir }}
      type: DirectoryOrCreate
    name: etcd-certs
{% endif %}
  - hostPath:
      path: /usr/share/zoneinfo
      type: DirectoryOrCreate
    name: usr-local-timezone
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
  - hostPath:
      path: {{ kubernetes_etc_dirs }}pki
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /usr/local/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-local-share-ca-certificates
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates
status: {}