apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-scheduler
    tier: control-plane
  name: kube-scheduler
  namespace: kube-system
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  containers:
  - name: kube-scheduler
    image: {{ k8s_cluster_component_registry }}/kube-scheduler:{{ k8s_version }}
    command:
      - kube-scheduler
      - --bind-address=0.0.0.0
      - --leader-elect=true
      - --kubeconfig={{ kubernetes_etc_dirs }}scheduler.conf
      - --authentication-kubeconfig={{ kubernetes_etc_dirs }}scheduler.conf
      - --authorization-kubeconfig={{ kubernetes_etc_dirs }}scheduler.conf
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10259
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10259
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
    env:
    - name: TZ
      value: "{{ time_location }}"
    volumeMounts:
    - mountPath: {{ kubernetes_etc_dirs }}pki
      name: k8s-certs
      readOnly: true
    - mountPath: {{ kubernetes_etc_dirs }}scheduler.conf
      name: kubeconfig
      readOnly: true
    - mountPath: /usr/share/zoneinfo
      name: usr-local-timezone
      readOnly: true
  volumes:
  - hostPath:
      path: /usr/share/zoneinfo
      type: DirectoryOrCreate
    name: usr-local-timezone
  - hostPath:
      path: {{ kubernetes_etc_dirs }}pki
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: {{ kubernetes_etc_dirs }}scheduler.conf
      type: FileOrCreate
    name: kubeconfig
