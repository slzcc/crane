## Docker
## ********************************************************************************************************************************

# install To Docker Version
# https://download.docker.com/linux/static/stable/x86_64/
docker_version: '20.10.18'

# Docker 安装类型, 默认 http_binary, 其他方式: http_binary, local_binary, http_script
# 值为 http_binary 则通过远程下载二进制文件到执行目录.
# 值为 local_binary 则通过本地二进制文件 Copy 到远端.
docker_install_type: "{{ cri_drive_install_type }}"

# http_binary Source Addr
docker_os_arch: >-
  {%- if os_arch == "arm64" -%}
  aarch64
  {%- else -%}
  x86_64
  {%- endif -%}

# install docker bin path
# 目前已经废弃
#docker_ctl_path: '/usr/bin/'

# 镜像加速, 如果为空则不设置.
docker_registry_mirrors: ''

# Docker 存储路径
docker_data_root: '/var/lib/docker'

# Docker Image 存储驱动, 默认系统自识别
# 因部分 xfs 底层存储 ftype=0, 会造成 overlay2 无法正常使用, 请自行解决.
# DOCS https://docs.docker.com/storage/storagedriver/overlayfs-driver/
# 问题指南: https://www.jianshu.com/p/00ffd8df6010
docker_storage_driver: ""

# 允许的不安全 Registry 地址
# 默认需要加入 Harbor 配置项, 请设置为:
# docker_insecure_registry: '{{ harbor_tls_option_domain.split(",") }}'
docker_insecure_registry: '[]'

# docker cgroup drive
docker_cgroup_drive: '{{ cgroup_drive }}'

# docker login file size
docker_log_size: '1G'

# 是否配置 Daemon.js 
is_docker_daemon_config: true

# Docker Systemd Options:
# Example: '"HTTP_PROXY=http://{{ http_proxy }}" "HTTPS_PROXY=http://{{ https_proxy }}" "NO_PROXY={{ no_proxy }}"'
docker_systemd_env_option: ''

# 强制安装 Docker, 当可能存在不同版本 Docker 可以强制安装统一版本
is_mandatory_docker_install: false

# 强制覆盖 daemon.json 配置文件
is_mandatory_docker_config: false

# Docker Socket 文件路径
docker_socket_path: '/var/run/docker.sock'

# NVIDIA 驱动
# Docs: https://github.com/NVIDIA/nvidia-docker

# 安装之前清理旧的 Docker
clean_up_old_before_installing: false

# 安装之前 close kubelet 保证后续启动服务时出现不必要的损失
is_docker_install_close_kubelet: false